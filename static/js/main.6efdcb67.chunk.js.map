{"version":3,"sources":["Components/ToDoList/ToDoListItem/ToDoListItem.js","Components/ToDoList/ToDoList.js","Components/ItemStatusFilter/ItemStatusFilter.js","Components/Search/Search.js","Components/Head/Head.js","Components/AddItem/AddItem.js","Components/App.js","index.js"],"names":["ToDoListItem","this","props","label","onDeleted","onTogleImportant","onTogleDone","classNames","done","important","className","onClick","React","Component","ToDoList","todos","Elements","map","item","id","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","type","Search","state","term","placeholder","value","onChange","e","target","setState","onSerchchange","Head","todo","AddItem","addItem","onSubmit","preventDefault","document","querySelector","Todo","maxId","toDoData","deleteItem","idx","findIndex","el","before","slice","after","text","newItem","newArr","Array","from","oldItem","search","items","length","toLowerCase","indexOf","visibleItems","doneCount","todoDone","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6efdcb67.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ToDoListItem.css\";\n\nclass ToDoListItem extends React.Component {\n  render() {\n    const { label, onDeleted, onTogleImportant, onTogleDone, done, important } = this.props;\n    let classNames =  \"todo-list-item-label\";\n    done ? (classNames += \" done\") : (classNames += \"\");\n    important ? (classNames += \" important\") : (classNames += \"\");\n    return (\n      <span className=\"todo-list-item\">\n        <span\n          className={ classNames }\n          onClick={ onTogleDone}\n        >\n          {label}\n        </span>\n        <button\n          className=\"btn btn-outline-success done\"\n          onClick={onTogleImportant}\n        >\n          <i className=\"fa fa-exclamation\"></i>\n        </button>\n        <button \n          className=\"btn btn-outline-success\"\n          onClick = { onDeleted }>\n          <i className=\"fa fa-trash-alt\"></i>\n        </button>\n      </span>\n    );\n  }\n}\n\n///////////////function variant with hook useState//////////////////////\n\n// const ToDoListItem = ({ label, onDeleted, onTogleImportant, onTogleDone, done, important }) => {\n  \n//   let classNames = \"todo-list-item-label\";\n//   done ? (classNames += \" done\") : (classNames += \"\");\n//   important ? (classNames += \" important\") : (classNames += \"\");\n//   return (\n//     <span className=\"todo-list-item\">\n//       <span\n//         className={ classNames }\n//         //use hook\n//         onClick={ onTogleDone }\n//       >\n//         {label}\n//       </span>\n//       <button\n//         className=\"btn btn-outline-success\"\n//         onClick={ onTogleImportant }\n//       >\n//         <i className=\"fa fa-exclamation\"></i>\n//       </button>\n//       <button \n//          className=\"btn btn-outline-success\"\n//          onClick = { onDeleted }>\n//         <i className=\"fa fa-trash-alt\"></i>\n//       </button>\n//     </span>\n//   );\n// };\n\nexport default ToDoListItem;\n","import React from \"react\";\nimport ToDoListItem from \"./ToDoListItem/ToDoListItem\";\nimport \"./ToDoList.css\";\n\nconst ToDoList = ({ todos, onDeleted, onTogleImportant, onTogleDone }) => {\n    const Elements = todos.map((item) =>{\n      const { label, important, id, done } = item;\n        return(\n            <li key = { id } className = \"list-group-item\">\n                <ToDoListItem \n                  label = { label } \n                  important = { important }\n                  done = { done }\n                  onDeleted = { ()=>onDeleted(id) }\n                  onTogleImportant = { ()=>onTogleImportant(id) }\n                  onTogleDone = { ()=>onTogleDone(id)}/>\n                {/* <ToDoListItem label = { ...item }/> */}\n            </li>\n        )\n    });\n  return (\n    <div className=\"list-group todo-list\">\n      <ul>\n          { Elements }\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import React from 'react';\n\n\nclass ItemStatusFilter extends React.Component {\n    buttons = [\n        {name:'all', label:'All'},\n        {name:'active', label:'Active'},\n        {name:'done', label:'Done'},\n\n\n    ]\n    render() {\n        const { filter, onFilterChange } = this.props;\n        const buttons = this.buttons.map(({ name, label })=>{\n            const isActive = filter ===name;\n            const clazz = isActive? `btn-info`:`btn-outline-secondary`;\n            return(\n                <button \n                    type = 'button'\n                    className = {`btn ${clazz}`}\n                    key = { name }\n                    onClick = { ()=> onFilterChange(name) }>\n                { label }\n                </button>\n            )\n        });\n        return (\n            <div className = 'btn-group'>\n            { buttons }\n        </div>\n        );\n    }\n}\n\n\nexport default ItemStatusFilter;","import React from 'react';\nimport './Search.css';\nimport ItemStatusFilter from '../ItemStatusFilter/ItemStatusFilter';\nclass Search extends React.Component{\n    state={\n        term:''\n    };\n    render(){\n        return(\n            <div className = 'search-todo'>\n            <input \n                placeholder = 'Search here'\n                value = { this.state.term }\n                onChange = { (e)=>{\n                    const term = e.target.value;\n                    this.setState({ term });\n                    this.props.onSerchchange(term);\n                } } >\n\n            </input>\n            <ItemStatusFilter \n                filter = {this.props.filter}\n                onFilterChange = { this.props.onFilterChange }\n                />\n        </div>\n        );\n    }\n}\n\n\n// const Search = ({ data }) => {\n//     const placeholderText = 'Search here';\n//     return (\n//         <div className = 'search-todo'>\n//             <input \n//                 placeholder = { placeholderText }\n//                 onChange = { ()=>{\n//                     //data.forEach((i)=>console.log(i.label))\n//                 } } >\n\n//             </input>\n//             <ItemStatusFilter/>\n//         </div>\n//     );\n// }\n\nexport default Search;","import React from 'react';\nimport './Head.css';\n\nconst Head = ({ done, todo}) => {\n    return (\n        <div className = 'head-todo'>\n            <h1>To do list</h1>\n            <h2>{ todo } more todo, { done } done </h2>\n        </div>\n    );\n}\n\nexport default Head;","import React from \"react\";\nimport \"./AddItem.css\";\n// class AddItem extends React.Component {\n//   render() {\n//     return (\n//       <form \n//         className=\"item-form\"\n//         onSubmit = { (e)=>{\n//           e.preventDefault();\n//           this.props.addItem(document.querySelector(\".item-input\").value);\n//           } }>\n//         <input\n//           className=\"form-control item-input\"\n//           type=\"text\"\n//           placeholder=\"Default input\"\n//           >\n\n//         </input>\n//         <button \n//             className=\"btn btn-success\">\n//           Add Item\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n////function///////\n\nconst AddItem = ({ addItem }) => {\n    return (\n        <form \n           className = 'item-form'\n             onSubmit = { (e)=>{\n             e.preventDefault();\n             addItem(document.querySelector(\".item-input\").value)\n             } }>\n            <input \n              className=\"form-control item-input\" \n              type=\"text\" \n              placeholder=\"Default input\"\n              >\n\n              </input>\n            <button\n            className = 'btn btn-success'\n            >\n                Add Item\n            </button>\n        </form>\n    );\n}\n\nexport default AddItem;\n","import React, { Component, useState } from \"react\";\nimport ToDoList from \"./ToDoList/ToDoList\";\nimport Search from \"./Search/Search\";\nimport Head from \"./Head/Head\";\nimport AddItem from \"./AddItem/AddItem\";\nimport \"./App.css\";\n\nclass Todo extends Component {\n  maxId = 100;\n  state = {\n    toDoData: [\n      { label: \"Drink Coffe\", done:false, important: false, id: 1 },\n      { label: \"Work\", done:false, important: false, id: 2 },\n      { label: \"Sleep\", done:false, important: false, id: 3 },\n    ],\n    term:\"\",\n    filter: \"all\"\n  };\n  deleteItem = (id) => {\n    this.setState(({ toDoData }) => {\n      const idx = toDoData.findIndex((el) => el.id === id);//получаем елемент массива\n      const before = toDoData.slice(0, idx);\n      const after = toDoData.slice(idx+1);\n      const newArr = [...before, ...after];\n      return { toDoData:newArr };\n    });\n  };\n  addItem = (text)=>{\n    //generate id\n    const newItem = {\n      label: text,\n      important: false,\n      id: this.maxId++\n    };\n    //add in toDoData\n    this.setState(({ toDoData })=>{\n      const newArr = Array.from(toDoData);\n      return{\n        toDoData: [...newArr, newItem]\n      };\n    });\n  };\n  onTogleImportant =(id)=>{\n    this.setState(({ toDoData })=>{\n      const idx = toDoData.findIndex((el) => el.id === id);//получаем елемент массива\n      const oldItem = toDoData[idx];\n      const before = toDoData.slice(0, idx);\n      const after = toDoData.slice(idx+1);\n      const newItem = {...oldItem, important: !oldItem.important};\n      const newArr = [...before, newItem, ...after];\n      return { toDoData:newArr };\n\n    });\n  };\n  onTogleDone = (id)=>{\n    this.setState(({ toDoData })=>{\n      const idx = toDoData.findIndex((el) => el.id === id);//получаем елемент массива\n      const oldItem = toDoData[idx];\n      const before = toDoData.slice(0, idx);\n      const after = toDoData.slice(idx+1);\n      const newItem = {...oldItem, done: !oldItem.done};\n      const newArr = [...before, newItem, ...after];\n      return { toDoData:newArr };\n\n    });\n  };\n  \n  search = (items, term)=>{\n    if (term.length===0){\n      return items;\n    }\n    return items.filter((item)=>{\n      return item.label\n        .toLowerCase()\n        .indexOf(term.toLowerCase())>-1;\n    });\n  };\n  onSerchchange = (term)=>{\n    this.setState({ term });\n  };\n  filter = (items, filter)=>{\n    switch(filter){\n      case \"all\":\n        return items;\n      case \"active\":\n        return items.filter((item)=>!item.done);\n      case \"done\":\n        return items.filter((item)=>item.done);\n      default:\n        return items;\n    }\n    \n  };\n  onFilterChange = (filter)=>{\n    this.setState({ filter });\n  };\n  render() {\n    const visibleItems = this.filter(\n      this.search(this.state.toDoData, this.state.term)\n      , this.state.filter);\n    const doneCount = this.state.toDoData\n                      .filter((el)=>el.done).length;\n    const todoDone = this.state.toDoData.length-doneCount;\n    return (\n      <div className=\"todo-container\">\n        <Head \n          done = { doneCount }\n          todo = { todoDone } />\n        <Search \n          onSerchchange = { this.onSerchchange }\n          filter = { this.state.filter }\n          onFilterChange = { this.onFilterChange }\n          />\n        <ToDoList\n          todos={visibleItems}\n          onDeleted={this.deleteItem}\n          onTogleImportant = { this.onTogleImportant}\n          onTogleDone = { this.onTogleDone}/>\n        <AddItem addItem = { this.addItem }/>\n      </div>\n    );\n  }\n}\n\n//////functions/////////\n\n// const Todo = (props) => {\n//   const [toDoData, settoDoData] = useState([\n//     { label: \"Drink Coffe\", done: false, important: false, id: 1 },\n//     { label: \"Work\", done: false, important: false, id: 2 },\n//     { label: \"Sleep\", done: false, important: false, id: 3 },\n//   ]);\n//   const doneCount = toDoData.filter((el)=>el.done).length;\n//   const todoDone = toDoData.length-doneCount;\n//   return (\n//     <div className=\"todo-container\">\n//       <Head \n//       done = { doneCount }\n//       todo = { todoDone }\n//       />\n//       <Search />\n//       <ToDoList\n//         todos={toDoData}\n//         onDeleted={(id) => {\n//           const newArr = Array.from(toDoData);\n//           const indx = newArr.findIndex((i) => i.id === id);\n//           newArr.splice(indx, 1);\n//           settoDoData(newArr);\n//         }}\n//         onTogleImportant={(id) => {\n//           const idx = toDoData.findIndex((el) => el.id === id); //получаем елемент массива\n//           const oldItem = toDoData[idx];\n//           const before = toDoData.slice(0, idx);\n//           const after = toDoData.slice(idx + 1);\n//           const newItem = { ...oldItem, important: !oldItem.important };\n//           const newArr = [...before, newItem, ...after];\n//           settoDoData(newArr);\n//         }}\n//         onTogleDone={(id) => {\n//           const idx = toDoData.findIndex((el) => el.id === id); //получаем елемент массива\n//           const oldItem = toDoData[idx];\n//           const before = toDoData.slice(0, idx);\n//           const after = toDoData.slice(idx + 1);\n//           const newItem = { ...oldItem, done: !oldItem.done };\n//           const newArr = [...before, newItem, ...after];\n//           settoDoData(newArr);\n//         }}\n//       />\n//       <AddItem\n//         addItem={(text) => {\n//           let maxId = 100;\n//           const newArr = Array.from(toDoData);\n//           const newItem = {\n//             label: text,\n//             important: false,\n//             id: maxId++,\n//           };\n//           settoDoData([...newArr, newItem]);\n//           console.log(12);\n//         }}\n//       />\n//     </div>\n//   );\n// };\n\nexport default Todo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}